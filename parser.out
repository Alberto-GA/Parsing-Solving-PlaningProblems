Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def init_def metric_def RPAREN
Rule 5     problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN
Rule 6     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 7     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 8     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 9     init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 10    init_def -> LPAREN INIT_KEY RPAREN
Rule 11    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 12    metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN
Rule 13    domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 14    domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
Rule 15    domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 16    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 17    require_key_lst -> require_key require_key_lst
Rule 18    require_key_lst -> require_key
Rule 19    require_key -> STRIPS_KEY
Rule 20    require_key -> EQUALITY_KEY
Rule 21    require_key -> TYPING_KEY
Rule 22    require_key -> PROBABILISTIC_EFFECTS_KEY
Rule 23    require_key -> ADL_KEY
Rule 24    require_key -> REWARDS_REQ_KEY
Rule 25    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 26    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 27    predicate_def_lst -> predicate_def predicate_def_lst
Rule 28    predicate_def_lst -> predicate_def
Rule 29    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 30    predicate_def -> LPAREN NAME RPAREN
Rule 31    action_def_lst -> action_def action_def_lst
Rule 32    action_def_lst -> action_def
Rule 33    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 34    action_def -> LPAREN ACTION_KEY NAME action_def_body RPAREN
Rule 35    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 36    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 37    action_def_body -> precond_def effects_def
Rule 38    action_def_body -> effects_def
Rule 39    precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 40    precond_def -> PRECONDITION_KEY literal
Rule 41    effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
Rule 42    effects_def -> EFFECT_KEY effect
Rule 43    effects_lst -> effect effects_lst
Rule 44    effects_lst -> effect
Rule 45    effect -> literal
Rule 46    effect -> LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN
Rule 47    effect -> LPAREN WHEN_KEY literal fluent_def RPAREN
Rule 48    effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
Rule 49    effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
Rule 50    effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
Rule 51    prob_effect_list -> prob_effect prob_effect_list
Rule 52    prob_effect_list -> prob_effect
Rule 53    prob_effect -> NUMBER literal
Rule 54    fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
Rule 55    fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
Rule 56    literals_lst -> literal literals_lst
Rule 57    literals_lst -> literal
Rule 58    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 59    literal -> predicate
Rule 60    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 61    ground_predicates_lst -> ground_predicate
Rule 62    predicate -> LPAREN NAME variables_lst RPAREN
Rule 63    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 64    predicate -> LPAREN NAME RPAREN
Rule 65    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 66    ground_predicate -> LPAREN NAME RPAREN
Rule 67    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 68    typed_constants_lst -> constants_lst HYPHEN type
Rule 69    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 70    typed_variables_lst -> variables_lst HYPHEN type
Rule 71    constants_lst -> constant constants_lst
Rule 72    constants_lst -> constant
Rule 73    variables_lst -> VARIABLE variables_lst
Rule 74    variables_lst -> VARIABLE
Rule 75    names_lst -> NAME names_lst
Rule 76    names_lst -> NAME
Rule 77    type -> NAME
Rule 78    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 33 34
ADL_KEY              : 23
AND_KEY              : 8 11 39 41 48 50
DECREASE_KEY         : 54
DEFINE_KEY           : 3 4 5 13 14
DOMAIN_KEY           : 15
EFFECT_KEY           : 41 42
EQUALITY_KEY         : 20
EQUALS               : 63
GOAL_KEY             : 11
HYPHEN               : 67 68 69 70
INCREASE_KEY         : 55
INIT_KEY             : 8 9 10
LPAREN               : 3 4 5 6 7 8 8 9 10 11 11 12 12 13 14 15 16 25 26 29 30 33 34 35 36 39 41 46 47 48 48 49 49 50 50 50 54 54 55 55 58 62 63 64 65 66
MAXIMIZE_KEY         : 12
METRIC_KEY           : 12
NAME                 : 6 15 29 30 33 34 62 64 65 66 75 76 77 78
NOT_KEY              : 58
NUMBER               : 53 54 55
OBJECTS_KEY          : 7
PARAMETERS_KEY       : 35 36
PRECONDITION_KEY     : 39 40
PREDICATES_KEY       : 26
PROBABILISTIC_EFFECTS_KEY : 22
PROBABILISTIC_KEY    : 46 49 50
PROBLEM_KEY          : 6
REQUIREMENTS_KEY     : 16
REWARDS_REQ_KEY      : 24
REWARD_KEY           : 12 54 55
RPAREN               : 3 4 5 6 7 8 8 9 10 11 11 12 12 13 14 15 16 25 26 29 30 33 34 35 36 39 41 46 47 48 48 49 49 50 50 50 54 54 55 55 58 62 63 64 65 66
STRIPS_KEY           : 19
TYPES_KEY            : 25
TYPING_KEY           : 21
VARIABLE             : 63 63 73 74
WHEN_KEY             : 47 48 49 50
error                : 

Nonterminals, with rules where they appear

action_def           : 31 32
action_def_body      : 33 34
action_def_lst       : 13 14 31
constant             : 71 72
constants_lst        : 65 67 68 71
domain               : 1
domain_def           : 3 4 5 13 14
effect               : 42 43 44
effects_def          : 37 38
effects_lst          : 41 43
fluent_def           : 47 48
goal_def             : 3 5
ground_predicate     : 60 61
ground_predicates_lst : 8 9 11 60
init_def             : 3 4 5
literal              : 40 45 47 49 53 56 57
literals_lst         : 39 48 50 56
metric_def           : 4
names_lst            : 25 75
objects_def          : 3
parameters_def       : 33
pddl                 : 0
precond_def          : 37
predicate            : 58 59
predicate_def        : 27 28
predicate_def_lst    : 26 27
predicates_def       : 13 14
prob_effect          : 51 52
prob_effect_list     : 46 49 50 51
problem              : 2
problem_def          : 3 4 5
require_def          : 13 14
require_key          : 17 18
require_key_lst      : 16 17
type                 : 67 68 69 70
typed_constants_lst  : 7 67
typed_variables_lst  : 29 35 69
types_def            : 13
variables_lst        : 62 69 70 73

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (13) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (14) domain -> . LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (3) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def init_def metric_def RPAREN
    (5) problem -> . LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (13) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (14) domain -> LPAREN . DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN
    (3) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def init_def metric_def RPAREN
    (5) problem -> LPAREN . DEFINE_KEY problem_def domain_def init_def goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (13) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (14) domain -> LPAREN DEFINE_KEY . domain_def require_def predicates_def action_def_lst RPAREN
    (3) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def init_def metric_def RPAREN
    (5) problem -> LPAREN DEFINE_KEY . problem_def domain_def init_def goal_def RPAREN
    (15) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (6) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (15) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (6) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (13) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (14) domain -> LPAREN DEFINE_KEY domain_def . require_def predicates_def action_def_lst RPAREN
    (16) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (3) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def init_def metric_def RPAREN
    (5) problem -> LPAREN DEFINE_KEY problem_def . domain_def init_def goal_def RPAREN
    (15) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_def                     shift and go to state 14

state 9

    (15) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (6) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (16) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (13) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (14) domain -> LPAREN DEFINE_KEY domain_def require_def . predicates_def action_def_lst RPAREN
    (25) types_def -> . LPAREN TYPES_KEY names_lst RPAREN
    (26) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19
    predicates_def                 shift and go to state 20

state 13

    (15) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 14

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . init_def metric_def RPAREN
    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def . init_def goal_def RPAREN
    (7) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN
    (8) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN
    (10) init_def -> . LPAREN INIT_KEY RPAREN

    LPAREN          shift and go to state 21

    objects_def                    shift and go to state 22
    init_def                       shift and go to state 23

state 15

    (15) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 24


state 16

    (6) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 25


state 17

    (16) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (17) require_key_lst -> . require_key require_key_lst
    (18) require_key_lst -> . require_key
    (19) require_key -> . STRIPS_KEY
    (20) require_key -> . EQUALITY_KEY
    (21) require_key -> . TYPING_KEY
    (22) require_key -> . PROBABILISTIC_EFFECTS_KEY
    (23) require_key -> . ADL_KEY
    (24) require_key -> . REWARDS_REQ_KEY

    STRIPS_KEY      shift and go to state 28
    EQUALITY_KEY    shift and go to state 29
    TYPING_KEY      shift and go to state 30
    PROBABILISTIC_EFFECTS_KEY shift and go to state 31
    ADL_KEY         shift and go to state 32
    REWARDS_REQ_KEY shift and go to state 33

    require_key_lst                shift and go to state 26
    require_key                    shift and go to state 27

state 18

    (25) types_def -> LPAREN . TYPES_KEY names_lst RPAREN
    (26) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    TYPES_KEY       shift and go to state 34
    PREDICATES_KEY  shift and go to state 35


state 19

    (13) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (26) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 36

    predicates_def                 shift and go to state 37

state 20

    (14) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def . action_def_lst RPAREN
    (31) action_def_lst -> . action_def action_def_lst
    (32) action_def_lst -> . action_def
    (33) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
    (34) action_def -> . LPAREN ACTION_KEY NAME action_def_body RPAREN

    LPAREN          shift and go to state 38

    action_def_lst                 shift and go to state 39
    action_def                     shift and go to state 40

state 21

    (7) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN
    (8) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN
    (10) init_def -> LPAREN . INIT_KEY RPAREN

    OBJECTS_KEY     shift and go to state 41
    INIT_KEY        shift and go to state 42


state 22

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (8) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN
    (10) init_def -> . LPAREN INIT_KEY RPAREN

    LPAREN          shift and go to state 43

    init_def                       shift and go to state 44

state 23

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def . metric_def RPAREN
    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def . goal_def RPAREN
    (12) metric_def -> . LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN
    (11) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 45

    metric_def                     shift and go to state 46
    goal_def                       shift and go to state 47

state 24

    (15) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 15 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 25

    (6) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 26

    (16) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 48


state 27

    (17) require_key_lst -> require_key . require_key_lst
    (18) require_key_lst -> require_key .
    (17) require_key_lst -> . require_key require_key_lst
    (18) require_key_lst -> . require_key
    (19) require_key -> . STRIPS_KEY
    (20) require_key -> . EQUALITY_KEY
    (21) require_key -> . TYPING_KEY
    (22) require_key -> . PROBABILISTIC_EFFECTS_KEY
    (23) require_key -> . ADL_KEY
    (24) require_key -> . REWARDS_REQ_KEY

    RPAREN          reduce using rule 18 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 28
    EQUALITY_KEY    shift and go to state 29
    TYPING_KEY      shift and go to state 30
    PROBABILISTIC_EFFECTS_KEY shift and go to state 31
    ADL_KEY         shift and go to state 32
    REWARDS_REQ_KEY shift and go to state 33

    require_key                    shift and go to state 27
    require_key_lst                shift and go to state 49

state 28

    (19) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 19 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 19 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 19 (require_key -> STRIPS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 19 (require_key -> STRIPS_KEY .)
    ADL_KEY         reduce using rule 19 (require_key -> STRIPS_KEY .)
    REWARDS_REQ_KEY reduce using rule 19 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 19 (require_key -> STRIPS_KEY .)


state 29

    (20) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 20 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 20 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 20 (require_key -> EQUALITY_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 20 (require_key -> EQUALITY_KEY .)
    ADL_KEY         reduce using rule 20 (require_key -> EQUALITY_KEY .)
    REWARDS_REQ_KEY reduce using rule 20 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 20 (require_key -> EQUALITY_KEY .)


state 30

    (21) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 21 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 21 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 21 (require_key -> TYPING_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 21 (require_key -> TYPING_KEY .)
    ADL_KEY         reduce using rule 21 (require_key -> TYPING_KEY .)
    REWARDS_REQ_KEY reduce using rule 21 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 21 (require_key -> TYPING_KEY .)


state 31

    (22) require_key -> PROBABILISTIC_EFFECTS_KEY .

    STRIPS_KEY      reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EQUALITY_KEY    reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    TYPING_KEY      reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    ADL_KEY         reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    REWARDS_REQ_KEY reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    RPAREN          reduce using rule 22 (require_key -> PROBABILISTIC_EFFECTS_KEY .)


state 32

    (23) require_key -> ADL_KEY .

    STRIPS_KEY      reduce using rule 23 (require_key -> ADL_KEY .)
    EQUALITY_KEY    reduce using rule 23 (require_key -> ADL_KEY .)
    TYPING_KEY      reduce using rule 23 (require_key -> ADL_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 23 (require_key -> ADL_KEY .)
    ADL_KEY         reduce using rule 23 (require_key -> ADL_KEY .)
    REWARDS_REQ_KEY reduce using rule 23 (require_key -> ADL_KEY .)
    RPAREN          reduce using rule 23 (require_key -> ADL_KEY .)


state 33

    (24) require_key -> REWARDS_REQ_KEY .

    STRIPS_KEY      reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    EQUALITY_KEY    reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    TYPING_KEY      reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    ADL_KEY         reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    REWARDS_REQ_KEY reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)
    RPAREN          reduce using rule 24 (require_key -> REWARDS_REQ_KEY .)


state 34

    (25) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (75) names_lst -> . NAME names_lst
    (76) names_lst -> . NAME

    NAME            shift and go to state 51

    names_lst                      shift and go to state 50

state 35

    (26) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (27) predicate_def_lst -> . predicate_def predicate_def_lst
    (28) predicate_def_lst -> . predicate_def
    (29) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (30) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 52

    predicate_def_lst              shift and go to state 53
    predicate_def                  shift and go to state 54

state 36

    (26) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 35


state 37

    (13) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (31) action_def_lst -> . action_def action_def_lst
    (32) action_def_lst -> . action_def
    (33) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
    (34) action_def -> . LPAREN ACTION_KEY NAME action_def_body RPAREN

    LPAREN          shift and go to state 38

    action_def_lst                 shift and go to state 55
    action_def                     shift and go to state 40

state 38

    (33) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN
    (34) action_def -> LPAREN . ACTION_KEY NAME action_def_body RPAREN

    ACTION_KEY      shift and go to state 56


state 39

    (14) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 57


state 40

    (31) action_def_lst -> action_def . action_def_lst
    (32) action_def_lst -> action_def .
    (31) action_def_lst -> . action_def action_def_lst
    (32) action_def_lst -> . action_def
    (33) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
    (34) action_def -> . LPAREN ACTION_KEY NAME action_def_body RPAREN

    RPAREN          reduce using rule 32 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 38

    action_def                     shift and go to state 40
    action_def_lst                 shift and go to state 58

state 41

    (7) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (67) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (68) typed_constants_lst -> . constants_lst HYPHEN type
    (71) constants_lst -> . constant constants_lst
    (72) constants_lst -> . constant
    (78) constant -> . NAME

    NAME            shift and go to state 62

    typed_constants_lst            shift and go to state 59
    constants_lst                  shift and go to state 60
    constant                       shift and go to state 61

state 42

    (8) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (10) init_def -> LPAREN INIT_KEY . RPAREN
    (60) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (61) ground_predicates_lst -> . ground_predicate
    (65) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (66) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 63
    RPAREN          shift and go to state 65

    ground_predicates_lst          shift and go to state 64
    ground_predicate               shift and go to state 66

state 43

    (8) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (9) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN
    (10) init_def -> LPAREN . INIT_KEY RPAREN

    INIT_KEY        shift and go to state 42


state 44

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (11) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 67

    goal_def                       shift and go to state 68

state 45

    (12) metric_def -> LPAREN . METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN
    (11) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    METRIC_KEY      shift and go to state 69
    GOAL_KEY        shift and go to state 70


state 46

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def metric_def . RPAREN

    RPAREN          shift and go to state 71


state 47

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 72


state 48

    (16) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 16 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 49

    (17) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 17 (require_key_lst -> require_key require_key_lst .)


state 50

    (25) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 73


state 51

    (75) names_lst -> NAME . names_lst
    (76) names_lst -> NAME .
    (75) names_lst -> . NAME names_lst
    (76) names_lst -> . NAME

    RPAREN          reduce using rule 76 (names_lst -> NAME .)
    NAME            shift and go to state 51

    names_lst                      shift and go to state 74

state 52

    (29) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (30) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 75


state 53

    (26) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 76


state 54

    (27) predicate_def_lst -> predicate_def . predicate_def_lst
    (28) predicate_def_lst -> predicate_def .
    (27) predicate_def_lst -> . predicate_def predicate_def_lst
    (28) predicate_def_lst -> . predicate_def
    (29) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (30) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 28 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 52

    predicate_def                  shift and go to state 54
    predicate_def_lst              shift and go to state 77

state 55

    (13) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 78


state 56

    (33) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN
    (34) action_def -> LPAREN ACTION_KEY . NAME action_def_body RPAREN

    NAME            shift and go to state 79


state 57

    (14) domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 14 (domain -> LPAREN DEFINE_KEY domain_def require_def predicates_def action_def_lst RPAREN .)


state 58

    (31) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 31 (action_def_lst -> action_def action_def_lst .)


state 59

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 80


state 60

    (67) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (68) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 81


state 61

    (71) constants_lst -> constant . constants_lst
    (72) constants_lst -> constant .
    (71) constants_lst -> . constant constants_lst
    (72) constants_lst -> . constant
    (78) constant -> . NAME

    HYPHEN          reduce using rule 72 (constants_lst -> constant .)
    RPAREN          reduce using rule 72 (constants_lst -> constant .)
    NAME            shift and go to state 62

    constant                       shift and go to state 61
    constants_lst                  shift and go to state 82

state 62

    (78) constant -> NAME .

    NAME            reduce using rule 78 (constant -> NAME .)
    HYPHEN          reduce using rule 78 (constant -> NAME .)
    RPAREN          reduce using rule 78 (constant -> NAME .)


state 63

    (8) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (65) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (66) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 83
    NAME            shift and go to state 84


state 64

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 85


state 65

    (10) init_def -> LPAREN INIT_KEY RPAREN .

    LPAREN          reduce using rule 10 (init_def -> LPAREN INIT_KEY RPAREN .)


state 66

    (60) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (61) ground_predicates_lst -> ground_predicate .
    (60) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (61) ground_predicates_lst -> . ground_predicate
    (65) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (66) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 61 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 87

    ground_predicate               shift and go to state 66
    ground_predicates_lst          shift and go to state 86

state 67

    (11) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 70


state 68

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 88


state 69

    (12) metric_def -> LPAREN METRIC_KEY . MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN

    MAXIMIZE_KEY    shift and go to state 89


state 70

    (11) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 90


state 71

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def metric_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def init_def metric_def RPAREN .)


state 72

    (5) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN .

    $end            reduce using rule 5 (problem -> LPAREN DEFINE_KEY problem_def domain_def init_def goal_def RPAREN .)


state 73

    (25) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 25 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 74

    (75) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 75 (names_lst -> NAME names_lst .)


state 75

    (29) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (30) predicate_def -> LPAREN NAME . RPAREN
    (69) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (70) typed_variables_lst -> . variables_lst HYPHEN type
    (73) variables_lst -> . VARIABLE variables_lst
    (74) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 92
    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 91
    variables_lst                  shift and go to state 93

state 76

    (26) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 26 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 77

    (27) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 27 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 78

    (13) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 13 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 79

    (33) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (34) action_def -> LPAREN ACTION_KEY NAME . action_def_body RPAREN
    (35) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (36) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN
    (37) action_def_body -> . precond_def effects_def
    (38) action_def_body -> . effects_def
    (39) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (40) precond_def -> . PRECONDITION_KEY literal
    (41) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (42) effects_def -> . EFFECT_KEY effect

    PARAMETERS_KEY  shift and go to state 97
    PRECONDITION_KEY shift and go to state 100
    EFFECT_KEY      shift and go to state 101

    parameters_def                 shift and go to state 95
    action_def_body                shift and go to state 96
    precond_def                    shift and go to state 98
    effects_def                    shift and go to state 99

state 80

    (7) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 7 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 81

    (67) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (68) typed_constants_lst -> constants_lst HYPHEN . type
    (77) type -> . NAME

    NAME            shift and go to state 103

    type                           shift and go to state 102

state 82

    (71) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 71 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 71 (constants_lst -> constant constants_lst .)


state 83

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (60) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (61) ground_predicates_lst -> . ground_predicate
    (65) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (66) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 87

    ground_predicates_lst          shift and go to state 104
    ground_predicate               shift and go to state 66

state 84

    (65) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (66) ground_predicate -> LPAREN NAME . RPAREN
    (71) constants_lst -> . constant constants_lst
    (72) constants_lst -> . constant
    (78) constant -> . NAME

    RPAREN          shift and go to state 106
    NAME            shift and go to state 62

    constants_lst                  shift and go to state 105
    constant                       shift and go to state 61

state 85

    (9) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 9 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 86

    (60) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 60 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 87

    (65) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (66) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 84


state 88

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 3 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 89

    (12) metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY . LPAREN REWARD_KEY RPAREN RPAREN

    LPAREN          shift and go to state 107


state 90

    (11) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 108


state 91

    (29) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 109


state 92

    (30) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 30 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 30 (predicate_def -> LPAREN NAME RPAREN .)


state 93

    (69) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (70) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 110


state 94

    (73) variables_lst -> VARIABLE . variables_lst
    (74) variables_lst -> VARIABLE .
    (73) variables_lst -> . VARIABLE variables_lst
    (74) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 74 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 74 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 111

state 95

    (33) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (37) action_def_body -> . precond_def effects_def
    (38) action_def_body -> . effects_def
    (39) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (40) precond_def -> . PRECONDITION_KEY literal
    (41) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (42) effects_def -> . EFFECT_KEY effect

    PRECONDITION_KEY shift and go to state 100
    EFFECT_KEY      shift and go to state 101

    action_def_body                shift and go to state 112
    precond_def                    shift and go to state 98
    effects_def                    shift and go to state 99

state 96

    (34) action_def -> LPAREN ACTION_KEY NAME action_def_body . RPAREN

    RPAREN          shift and go to state 113


state 97

    (35) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (36) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 114


state 98

    (37) action_def_body -> precond_def . effects_def
    (41) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (42) effects_def -> . EFFECT_KEY effect

    EFFECT_KEY      shift and go to state 101

    effects_def                    shift and go to state 115

state 99

    (38) action_def_body -> effects_def .

    RPAREN          reduce using rule 38 (action_def_body -> effects_def .)


state 100

    (39) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY literals_lst RPAREN
    (40) precond_def -> PRECONDITION_KEY . literal
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 116

    literal                        shift and go to state 117
    predicate                      shift and go to state 118

state 101

    (41) effects_def -> EFFECT_KEY . LPAREN AND_KEY effects_lst RPAREN
    (42) effects_def -> EFFECT_KEY . effect
    (45) effect -> . literal
    (46) effect -> . LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN
    (47) effect -> . LPAREN WHEN_KEY literal fluent_def RPAREN
    (48) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> . LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 119

    effect                         shift and go to state 120
    literal                        shift and go to state 121
    predicate                      shift and go to state 118

state 102

    (67) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (68) typed_constants_lst -> constants_lst HYPHEN type .
    (67) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (68) typed_constants_lst -> . constants_lst HYPHEN type
    (71) constants_lst -> . constant constants_lst
    (72) constants_lst -> . constant
    (78) constant -> . NAME

    RPAREN          reduce using rule 68 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 62

    constants_lst                  shift and go to state 60
    typed_constants_lst            shift and go to state 122
    constant                       shift and go to state 61

state 103

    (77) type -> NAME .

    NAME            reduce using rule 77 (type -> NAME .)
    RPAREN          reduce using rule 77 (type -> NAME .)
    VARIABLE        reduce using rule 77 (type -> NAME .)


state 104

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 123


state 105

    (65) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 124


state 106

    (66) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 66 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 66 (ground_predicate -> LPAREN NAME RPAREN .)


state 107

    (12) metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN . REWARD_KEY RPAREN RPAREN

    REWARD_KEY      shift and go to state 125


state 108

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (60) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (61) ground_predicates_lst -> . ground_predicate
    (65) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (66) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 87

    ground_predicates_lst          shift and go to state 126
    ground_predicate               shift and go to state 66

state 109

    (29) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 29 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 110

    (69) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (70) typed_variables_lst -> variables_lst HYPHEN . type
    (77) type -> . NAME

    NAME            shift and go to state 103

    type                           shift and go to state 127

state 111

    (73) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 73 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 73 (variables_lst -> VARIABLE variables_lst .)


state 112

    (33) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 128


state 113

    (34) action_def -> LPAREN ACTION_KEY NAME action_def_body RPAREN .

    LPAREN          reduce using rule 34 (action_def -> LPAREN ACTION_KEY NAME action_def_body RPAREN .)
    RPAREN          reduce using rule 34 (action_def -> LPAREN ACTION_KEY NAME action_def_body RPAREN .)


state 114

    (35) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (36) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (69) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (70) typed_variables_lst -> . variables_lst HYPHEN type
    (73) variables_lst -> . VARIABLE variables_lst
    (74) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 130
    VARIABLE        shift and go to state 94

    typed_variables_lst            shift and go to state 129
    variables_lst                  shift and go to state 93

state 115

    (37) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 37 (action_def_body -> precond_def effects_def .)


state 116

    (39) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY literals_lst RPAREN
    (58) literal -> LPAREN . NOT_KEY predicate RPAREN
    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 131
    NOT_KEY         shift and go to state 132
    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 117

    (40) precond_def -> PRECONDITION_KEY literal .

    EFFECT_KEY      reduce using rule 40 (precond_def -> PRECONDITION_KEY literal .)


state 118

    (59) literal -> predicate .

    EFFECT_KEY      reduce using rule 59 (literal -> predicate .)
    RPAREN          reduce using rule 59 (literal -> predicate .)
    LPAREN          reduce using rule 59 (literal -> predicate .)
    NUMBER          reduce using rule 59 (literal -> predicate .)


state 119

    (41) effects_def -> EFFECT_KEY LPAREN . AND_KEY effects_lst RPAREN
    (46) effect -> LPAREN . PROBABILISTIC_KEY prob_effect_list RPAREN
    (47) effect -> LPAREN . WHEN_KEY literal fluent_def RPAREN
    (48) effect -> LPAREN . WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> LPAREN . WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> LPAREN . WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> LPAREN . NOT_KEY predicate RPAREN
    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 135
    PROBABILISTIC_KEY shift and go to state 136
    WHEN_KEY        shift and go to state 137
    NOT_KEY         shift and go to state 132
    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 120

    (42) effects_def -> EFFECT_KEY effect .

    RPAREN          reduce using rule 42 (effects_def -> EFFECT_KEY effect .)


state 121

    (45) effect -> literal .

    RPAREN          reduce using rule 45 (effect -> literal .)
    LPAREN          reduce using rule 45 (effect -> literal .)


state 122

    (67) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 67 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 123

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 138


state 124

    (65) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 65 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 65 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 125

    (12) metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY . RPAREN RPAREN

    RPAREN          shift and go to state 139


state 126

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 140


state 127

    (69) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (70) typed_variables_lst -> variables_lst HYPHEN type .
    (69) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (70) typed_variables_lst -> . variables_lst HYPHEN type
    (73) variables_lst -> . VARIABLE variables_lst
    (74) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 70 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 93
    typed_variables_lst            shift and go to state 141

state 128

    (33) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 33 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 33 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 129

    (35) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 142


state 130

    (36) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 36 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)
    EFFECT_KEY      reduce using rule 36 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 131

    (39) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . literals_lst RPAREN
    (56) literals_lst -> . literal literals_lst
    (57) literals_lst -> . literal
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 143

    literals_lst                   shift and go to state 144
    literal                        shift and go to state 145
    predicate                      shift and go to state 118

state 132

    (58) literal -> LPAREN NOT_KEY . predicate RPAREN
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 146

    predicate                      shift and go to state 147

state 133

    (62) predicate -> LPAREN NAME . variables_lst RPAREN
    (64) predicate -> LPAREN NAME . RPAREN
    (73) variables_lst -> . VARIABLE variables_lst
    (74) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 149
    VARIABLE        shift and go to state 94

    variables_lst                  shift and go to state 148

state 134

    (63) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 150


state 135

    (41) effects_def -> EFFECT_KEY LPAREN AND_KEY . effects_lst RPAREN
    (43) effects_lst -> . effect effects_lst
    (44) effects_lst -> . effect
    (45) effect -> . literal
    (46) effect -> . LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN
    (47) effect -> . LPAREN WHEN_KEY literal fluent_def RPAREN
    (48) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> . LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 151

    effects_lst                    shift and go to state 152
    effect                         shift and go to state 153
    literal                        shift and go to state 121
    predicate                      shift and go to state 118

state 136

    (46) effect -> LPAREN PROBABILISTIC_KEY . prob_effect_list RPAREN
    (51) prob_effect_list -> . prob_effect prob_effect_list
    (52) prob_effect_list -> . prob_effect
    (53) prob_effect -> . NUMBER literal

    NUMBER          shift and go to state 156

    prob_effect_list               shift and go to state 154
    prob_effect                    shift and go to state 155

state 137

    (47) effect -> LPAREN WHEN_KEY . literal fluent_def RPAREN
    (48) effect -> LPAREN WHEN_KEY . LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> LPAREN WHEN_KEY . literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> LPAREN WHEN_KEY . LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 157

    literal                        shift and go to state 158
    predicate                      shift and go to state 118

state 138

    (8) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 139

    (12) metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN . RPAREN

    RPAREN          shift and go to state 159


state 140

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 160


state 141

    (69) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 69 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 142

    (35) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 35 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)
    EFFECT_KEY      reduce using rule 35 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 143

    (58) literal -> LPAREN . NOT_KEY predicate RPAREN
    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 132
    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 144

    (39) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 161


state 145

    (56) literals_lst -> literal . literals_lst
    (57) literals_lst -> literal .
    (56) literals_lst -> . literal literals_lst
    (57) literals_lst -> . literal
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 57 (literals_lst -> literal .)
    LPAREN          shift and go to state 143

    literal                        shift and go to state 145
    literals_lst                   shift and go to state 162
    predicate                      shift and go to state 118

state 146

    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 147

    (58) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 163


state 148

    (62) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 164


state 149

    (64) predicate -> LPAREN NAME RPAREN .

    EFFECT_KEY      reduce using rule 64 (predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 64 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 64 (predicate -> LPAREN NAME RPAREN .)
    NUMBER          reduce using rule 64 (predicate -> LPAREN NAME RPAREN .)


state 150

    (63) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 165


state 151

    (46) effect -> LPAREN . PROBABILISTIC_KEY prob_effect_list RPAREN
    (47) effect -> LPAREN . WHEN_KEY literal fluent_def RPAREN
    (48) effect -> LPAREN . WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> LPAREN . WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> LPAREN . WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> LPAREN . NOT_KEY predicate RPAREN
    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    PROBABILISTIC_KEY shift and go to state 136
    WHEN_KEY        shift and go to state 137
    NOT_KEY         shift and go to state 132
    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 152

    (41) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst . RPAREN

    RPAREN          shift and go to state 166


state 153

    (43) effects_lst -> effect . effects_lst
    (44) effects_lst -> effect .
    (43) effects_lst -> . effect effects_lst
    (44) effects_lst -> . effect
    (45) effect -> . literal
    (46) effect -> . LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN
    (47) effect -> . LPAREN WHEN_KEY literal fluent_def RPAREN
    (48) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN
    (49) effect -> . LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (50) effect -> . LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 44 (effects_lst -> effect .)
    LPAREN          shift and go to state 151

    effect                         shift and go to state 153
    effects_lst                    shift and go to state 167
    literal                        shift and go to state 121
    predicate                      shift and go to state 118

state 154

    (46) effect -> LPAREN PROBABILISTIC_KEY prob_effect_list . RPAREN

    RPAREN          shift and go to state 168


state 155

    (51) prob_effect_list -> prob_effect . prob_effect_list
    (52) prob_effect_list -> prob_effect .
    (51) prob_effect_list -> . prob_effect prob_effect_list
    (52) prob_effect_list -> . prob_effect
    (53) prob_effect -> . NUMBER literal

    RPAREN          reduce using rule 52 (prob_effect_list -> prob_effect .)
    NUMBER          shift and go to state 156

    prob_effect                    shift and go to state 155
    prob_effect_list               shift and go to state 169

state 156

    (53) prob_effect -> NUMBER . literal
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 143

    literal                        shift and go to state 170
    predicate                      shift and go to state 118

state 157

    (48) effect -> LPAREN WHEN_KEY LPAREN . AND_KEY literals_lst RPAREN fluent_def RPAREN
    (50) effect -> LPAREN WHEN_KEY LPAREN . AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (58) literal -> LPAREN . NOT_KEY predicate RPAREN
    (62) predicate -> LPAREN . NAME variables_lst RPAREN
    (63) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 171
    NOT_KEY         shift and go to state 132
    NAME            shift and go to state 133
    EQUALS          shift and go to state 134


state 158

    (47) effect -> LPAREN WHEN_KEY literal . fluent_def RPAREN
    (49) effect -> LPAREN WHEN_KEY literal . LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (54) fluent_def -> . LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
    (55) fluent_def -> . LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    LPAREN          shift and go to state 172

    fluent_def                     shift and go to state 173

state 159

    (12) metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN .

    RPAREN          reduce using rule 12 (metric_def -> LPAREN METRIC_KEY MAXIMIZE_KEY LPAREN REWARD_KEY RPAREN RPAREN .)


state 160

    (11) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 11 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 161

    (39) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .

    EFFECT_KEY      reduce using rule 39 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 162

    (56) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 56 (literals_lst -> literal literals_lst .)


state 163

    (58) literal -> LPAREN NOT_KEY predicate RPAREN .

    EFFECT_KEY      reduce using rule 58 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 58 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 58 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    NUMBER          reduce using rule 58 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 164

    (62) predicate -> LPAREN NAME variables_lst RPAREN .

    EFFECT_KEY      reduce using rule 62 (predicate -> LPAREN NAME variables_lst RPAREN .)
    RPAREN          reduce using rule 62 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 62 (predicate -> LPAREN NAME variables_lst RPAREN .)
    NUMBER          reduce using rule 62 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 165

    (63) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 174


state 166

    (41) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .

    RPAREN          reduce using rule 41 (effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .)


state 167

    (43) effects_lst -> effect effects_lst .

    RPAREN          reduce using rule 43 (effects_lst -> effect effects_lst .)


state 168

    (46) effect -> LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN .

    RPAREN          reduce using rule 46 (effect -> LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN .)
    LPAREN          reduce using rule 46 (effect -> LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN .)


state 169

    (51) prob_effect_list -> prob_effect prob_effect_list .

    RPAREN          reduce using rule 51 (prob_effect_list -> prob_effect prob_effect_list .)


state 170

    (53) prob_effect -> NUMBER literal .

    NUMBER          reduce using rule 53 (prob_effect -> NUMBER literal .)
    RPAREN          reduce using rule 53 (prob_effect -> NUMBER literal .)


state 171

    (48) effect -> LPAREN WHEN_KEY LPAREN AND_KEY . literals_lst RPAREN fluent_def RPAREN
    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY . literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (56) literals_lst -> . literal literals_lst
    (57) literals_lst -> . literal
    (58) literal -> . LPAREN NOT_KEY predicate RPAREN
    (59) literal -> . predicate
    (62) predicate -> . LPAREN NAME variables_lst RPAREN
    (63) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (64) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 143

    literals_lst                   shift and go to state 175
    literal                        shift and go to state 145
    predicate                      shift and go to state 118

state 172

    (49) effect -> LPAREN WHEN_KEY literal LPAREN . PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (54) fluent_def -> LPAREN . DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
    (55) fluent_def -> LPAREN . INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    PROBABILISTIC_KEY shift and go to state 176
    DECREASE_KEY    shift and go to state 177
    INCREASE_KEY    shift and go to state 178


state 173

    (47) effect -> LPAREN WHEN_KEY literal fluent_def . RPAREN

    RPAREN          shift and go to state 179


state 174

    (63) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    EFFECT_KEY      reduce using rule 63 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    RPAREN          reduce using rule 63 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 63 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    NUMBER          reduce using rule 63 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 175

    (48) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst . RPAREN fluent_def RPAREN
    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst . RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN

    RPAREN          shift and go to state 180


state 176

    (49) effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY . prob_effect_list RPAREN RPAREN
    (51) prob_effect_list -> . prob_effect prob_effect_list
    (52) prob_effect_list -> . prob_effect
    (53) prob_effect -> . NUMBER literal

    NUMBER          shift and go to state 156

    prob_effect_list               shift and go to state 181
    prob_effect                    shift and go to state 155

state 177

    (54) fluent_def -> LPAREN DECREASE_KEY . LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    LPAREN          shift and go to state 182


state 178

    (55) fluent_def -> LPAREN INCREASE_KEY . LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    LPAREN          shift and go to state 183


state 179

    (47) effect -> LPAREN WHEN_KEY literal fluent_def RPAREN .

    RPAREN          reduce using rule 47 (effect -> LPAREN WHEN_KEY literal fluent_def RPAREN .)
    LPAREN          reduce using rule 47 (effect -> LPAREN WHEN_KEY literal fluent_def RPAREN .)


state 180

    (48) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN . fluent_def RPAREN
    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN . LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (54) fluent_def -> . LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
    (55) fluent_def -> . LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    LPAREN          shift and go to state 184

    fluent_def                     shift and go to state 185

state 181

    (49) effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list . RPAREN RPAREN

    RPAREN          shift and go to state 186


state 182

    (54) fluent_def -> LPAREN DECREASE_KEY LPAREN . REWARD_KEY RPAREN NUMBER RPAREN

    REWARD_KEY      shift and go to state 187


state 183

    (55) fluent_def -> LPAREN INCREASE_KEY LPAREN . REWARD_KEY RPAREN NUMBER RPAREN

    REWARD_KEY      shift and go to state 188


state 184

    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN . PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN
    (54) fluent_def -> LPAREN . DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN
    (55) fluent_def -> LPAREN . INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN

    PROBABILISTIC_KEY shift and go to state 189
    DECREASE_KEY    shift and go to state 177
    INCREASE_KEY    shift and go to state 178


state 185

    (48) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def . RPAREN

    RPAREN          shift and go to state 190


state 186

    (49) effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN . RPAREN

    RPAREN          shift and go to state 191


state 187

    (54) fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY . RPAREN NUMBER RPAREN

    RPAREN          shift and go to state 192


state 188

    (55) fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY . RPAREN NUMBER RPAREN

    RPAREN          shift and go to state 193


state 189

    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY . prob_effect_list RPAREN RPAREN
    (51) prob_effect_list -> . prob_effect prob_effect_list
    (52) prob_effect_list -> . prob_effect
    (53) prob_effect -> . NUMBER literal

    NUMBER          shift and go to state 156

    prob_effect_list               shift and go to state 194
    prob_effect                    shift and go to state 155

state 190

    (48) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN .

    RPAREN          reduce using rule 48 (effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN .)
    LPAREN          reduce using rule 48 (effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN fluent_def RPAREN .)


state 191

    (49) effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .

    RPAREN          reduce using rule 49 (effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .)
    LPAREN          reduce using rule 49 (effect -> LPAREN WHEN_KEY literal LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .)


state 192

    (54) fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 195


state 193

    (55) fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 196


state 194

    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list . RPAREN RPAREN

    RPAREN          shift and go to state 197


state 195

    (54) fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 198


state 196

    (55) fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 199


state 197

    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN . RPAREN

    RPAREN          shift and go to state 200


state 198

    (54) fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN .

    RPAREN          reduce using rule 54 (fluent_def -> LPAREN DECREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN .)


state 199

    (55) fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN .

    RPAREN          reduce using rule 55 (fluent_def -> LPAREN INCREASE_KEY LPAREN REWARD_KEY RPAREN NUMBER RPAREN .)


state 200

    (50) effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .

    RPAREN          reduce using rule 50 (effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .)
    LPAREN          reduce using rule 50 (effect -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN PROBABILISTIC_KEY prob_effect_list RPAREN RPAREN .)

