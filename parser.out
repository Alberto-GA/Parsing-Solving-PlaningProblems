Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def init_def RPAREN
Rule 5     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 6     objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 7     init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 8     init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 9     goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 10    domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
Rule 11    domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 12    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 13    require_key_lst -> require_key require_key_lst
Rule 14    require_key_lst -> require_key
Rule 15    require_key -> STRIPS_KEY
Rule 16    require_key -> EQUALITY_KEY
Rule 17    require_key -> TYPING_KEY
Rule 18    require_key -> PROBABILISTIC_EFFECTS_KEY
Rule 19    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 20    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 21    predicate_def_lst -> predicate_def predicate_def_lst
Rule 22    predicate_def_lst -> predicate_def
Rule 23    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 24    predicate_def -> LPAREN NAME RPAREN
Rule 25    action_def_lst -> action_def action_def_lst
Rule 26    action_def_lst -> action_def
Rule 27    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 28    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 29    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 30    action_def_body -> precond_def effects_def
Rule 31    precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 32    precond_def -> PRECONDITION_KEY literal
Rule 33    effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
Rule 34    effects_def -> EFFECT_KEY effect
Rule 35    effects_lst -> effect effects_lst
Rule 36    effects_lst -> effect
Rule 37    effect -> literal
Rule 38    effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
Rule 39    literals_lst -> literal literals_lst
Rule 40    literals_lst -> literal
Rule 41    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 42    literal -> predicate
Rule 43    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 44    ground_predicates_lst -> ground_predicate
Rule 45    predicate -> LPAREN NAME variables_lst RPAREN
Rule 46    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 47    predicate -> LPAREN NAME RPAREN
Rule 48    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 49    ground_predicate -> LPAREN NAME RPAREN
Rule 50    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 51    typed_constants_lst -> constants_lst HYPHEN type
Rule 52    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 53    typed_variables_lst -> variables_lst HYPHEN type
Rule 54    constants_lst -> constant constants_lst
Rule 55    constants_lst -> constant
Rule 56    variables_lst -> VARIABLE variables_lst
Rule 57    variables_lst -> VARIABLE
Rule 58    names_lst -> NAME names_lst
Rule 59    names_lst -> NAME
Rule 60    type -> NAME
Rule 61    constant -> NAME

Terminals, with rules where they appear

ACTION_KEY           : 27
AND_KEY              : 7 9 31 33
DEFINE_KEY           : 3 4 10
DOMAIN_KEY           : 11
EFFECT_KEY           : 33 34
EQUALITY_KEY         : 16
EQUALS               : 46
GOAL_KEY             : 9
HYPHEN               : 50 51 52 53
INIT_KEY             : 7 8
LPAREN               : 3 4 5 6 7 7 8 9 9 10 11 12 19 20 23 24 27 28 29 31 33 38 41 45 46 47 48 49
NAME                 : 5 11 23 24 27 45 47 48 49 58 59 60 61
NOT_KEY              : 41
OBJECTS_KEY          : 6
PARAMETERS_KEY       : 28 29
PRECONDITION_KEY     : 31 32
PREDICATES_KEY       : 20
PROBABILISTIC_EFFECTS_KEY : 18
PROBABILISTIC_KEY    : 38
PROBABILITY          : 38
PROBLEM_KEY          : 5
REQUIREMENTS_KEY     : 12
RPAREN               : 3 4 5 6 7 7 8 9 9 10 11 12 19 20 23 24 27 28 29 31 33 38 41 45 46 47 48 49
STRIPS_KEY           : 15
TYPES_KEY            : 19
TYPING_KEY           : 17
VARIABLE             : 46 46 56 57
error                : 

Nonterminals, with rules where they appear

action_def           : 25 26
action_def_body      : 27
action_def_lst       : 10 25
constant             : 54 55
constants_lst        : 48 50 51 54
domain               : 1
domain_def           : 3 4 10
effect               : 34 35 36
effects_def          : 30
effects_lst          : 33 35
goal_def             : 3
ground_predicate     : 43 44
ground_predicates_lst : 7 8 9 43
init_def             : 3 4
literal              : 32 37 38 39 40
literals_lst         : 31 39
names_lst            : 19 58
objects_def          : 3
parameters_def       : 27
pddl                 : 0
precond_def          : 30
predicate            : 41 42
predicate_def        : 21 22
predicate_def_lst    : 20 21
predicates_def       : 10
problem              : 2
problem_def          : 3 4
require_def          : 10
require_key          : 13 14
require_key_lst      : 12 13
type                 : 50 51 52 53
typed_constants_lst  : 6 50
typed_variables_lst  : 23 28 52
types_def            : 10
variables_lst        : 45 52 53 56

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (10) domain -> . LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (3) problem -> . LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def init_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (10) domain -> LPAREN . DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN
    (3) problem -> LPAREN . DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def init_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (10) domain -> LPAREN DEFINE_KEY . domain_def require_def types_def predicates_def action_def_lst RPAREN
    (3) problem -> LPAREN DEFINE_KEY . problem_def domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def init_def RPAREN
    (11) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (5) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (11) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (5) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (10) domain -> LPAREN DEFINE_KEY domain_def . require_def types_def predicates_def action_def_lst RPAREN
    (12) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN

    LPAREN          shift and go to state 11

    require_def                    shift and go to state 12

state 8

    (3) problem -> LPAREN DEFINE_KEY problem_def . domain_def objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def init_def RPAREN
    (11) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 13

    domain_def                     shift and go to state 14

state 9

    (11) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 15


state 10

    (5) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 16


state 11

    (12) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 17


state 12

    (10) domain -> LPAREN DEFINE_KEY domain_def require_def . types_def predicates_def action_def_lst RPAREN
    (19) types_def -> . LPAREN TYPES_KEY names_lst RPAREN

    LPAREN          shift and go to state 18

    types_def                      shift and go to state 19

state 13

    (11) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 14

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def . objects_def init_def goal_def RPAREN
    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . init_def RPAREN
    (6) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN
    (7) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (8) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 20

    objects_def                    shift and go to state 21
    init_def                       shift and go to state 22

state 15

    (11) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 23


state 16

    (5) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 24


state 17

    (12) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (13) require_key_lst -> . require_key require_key_lst
    (14) require_key_lst -> . require_key
    (15) require_key -> . STRIPS_KEY
    (16) require_key -> . EQUALITY_KEY
    (17) require_key -> . TYPING_KEY
    (18) require_key -> . PROBABILISTIC_EFFECTS_KEY

    STRIPS_KEY      shift and go to state 27
    EQUALITY_KEY    shift and go to state 28
    TYPING_KEY      shift and go to state 29
    PROBABILISTIC_EFFECTS_KEY shift and go to state 30

    require_key_lst                shift and go to state 25
    require_key                    shift and go to state 26

state 18

    (19) types_def -> LPAREN . TYPES_KEY names_lst RPAREN

    TYPES_KEY       shift and go to state 31


state 19

    (10) domain -> LPAREN DEFINE_KEY domain_def require_def types_def . predicates_def action_def_lst RPAREN
    (20) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN

    LPAREN          shift and go to state 32

    predicates_def                 shift and go to state 33

state 20

    (6) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN
    (7) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (8) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    OBJECTS_KEY     shift and go to state 34
    INIT_KEY        shift and go to state 35


state 21

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def . init_def goal_def RPAREN
    (7) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (8) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN

    LPAREN          shift and go to state 36

    init_def                       shift and go to state 37

state 22

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def . RPAREN

    RPAREN          shift and go to state 38


state 23

    (11) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 11 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 24

    (5) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 5 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 25

    (12) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 39


state 26

    (13) require_key_lst -> require_key . require_key_lst
    (14) require_key_lst -> require_key .
    (13) require_key_lst -> . require_key require_key_lst
    (14) require_key_lst -> . require_key
    (15) require_key -> . STRIPS_KEY
    (16) require_key -> . EQUALITY_KEY
    (17) require_key -> . TYPING_KEY
    (18) require_key -> . PROBABILISTIC_EFFECTS_KEY

    RPAREN          reduce using rule 14 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 27
    EQUALITY_KEY    shift and go to state 28
    TYPING_KEY      shift and go to state 29
    PROBABILISTIC_EFFECTS_KEY shift and go to state 30

    require_key                    shift and go to state 26
    require_key_lst                shift and go to state 40

state 27

    (15) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 15 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 15 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 15 (require_key -> STRIPS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 15 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 15 (require_key -> STRIPS_KEY .)


state 28

    (16) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 16 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 16 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 16 (require_key -> EQUALITY_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 16 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 16 (require_key -> EQUALITY_KEY .)


state 29

    (17) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 17 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 17 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 17 (require_key -> TYPING_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 17 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 17 (require_key -> TYPING_KEY .)


state 30

    (18) require_key -> PROBABILISTIC_EFFECTS_KEY .

    STRIPS_KEY      reduce using rule 18 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EQUALITY_KEY    reduce using rule 18 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    TYPING_KEY      reduce using rule 18 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 18 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    RPAREN          reduce using rule 18 (require_key -> PROBABILISTIC_EFFECTS_KEY .)


state 31

    (19) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (58) names_lst -> . NAME names_lst
    (59) names_lst -> . NAME

    NAME            shift and go to state 42

    names_lst                      shift and go to state 41

state 32

    (20) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN

    PREDICATES_KEY  shift and go to state 43


state 33

    (10) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def . action_def_lst RPAREN
    (25) action_def_lst -> . action_def action_def_lst
    (26) action_def_lst -> . action_def
    (27) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    LPAREN          shift and go to state 44

    action_def_lst                 shift and go to state 45
    action_def                     shift and go to state 46

state 34

    (6) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (50) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (51) typed_constants_lst -> . constants_lst HYPHEN type
    (54) constants_lst -> . constant constants_lst
    (55) constants_lst -> . constant
    (61) constant -> . NAME

    NAME            shift and go to state 50

    typed_constants_lst            shift and go to state 47
    constants_lst                  shift and go to state 48
    constant                       shift and go to state 49

state 35

    (7) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (8) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (43) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (44) ground_predicates_lst -> . ground_predicate
    (48) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (49) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 51

    ground_predicates_lst          shift and go to state 52
    ground_predicate               shift and go to state 53

state 36

    (7) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (8) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    INIT_KEY        shift and go to state 35


state 37

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def . goal_def RPAREN
    (9) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 54

    goal_def                       shift and go to state 55

state 38

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def init_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def init_def RPAREN .)


state 39

    (12) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 12 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 40

    (13) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 13 (require_key_lst -> require_key require_key_lst .)


state 41

    (19) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 56


state 42

    (58) names_lst -> NAME . names_lst
    (59) names_lst -> NAME .
    (58) names_lst -> . NAME names_lst
    (59) names_lst -> . NAME

    RPAREN          reduce using rule 59 (names_lst -> NAME .)
    NAME            shift and go to state 42

    names_lst                      shift and go to state 57

state 43

    (20) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (21) predicate_def_lst -> . predicate_def predicate_def_lst
    (22) predicate_def_lst -> . predicate_def
    (23) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (24) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 58

    predicate_def_lst              shift and go to state 59
    predicate_def                  shift and go to state 60

state 44

    (27) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    ACTION_KEY      shift and go to state 61


state 45

    (10) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst . RPAREN

    RPAREN          shift and go to state 62


state 46

    (25) action_def_lst -> action_def . action_def_lst
    (26) action_def_lst -> action_def .
    (25) action_def_lst -> . action_def action_def_lst
    (26) action_def_lst -> . action_def
    (27) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

    RPAREN          reduce using rule 26 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 44

    action_def                     shift and go to state 46
    action_def_lst                 shift and go to state 63

state 47

    (6) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 64


state 48

    (50) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (51) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 65


state 49

    (54) constants_lst -> constant . constants_lst
    (55) constants_lst -> constant .
    (54) constants_lst -> . constant constants_lst
    (55) constants_lst -> . constant
    (61) constant -> . NAME

    HYPHEN          reduce using rule 55 (constants_lst -> constant .)
    RPAREN          reduce using rule 55 (constants_lst -> constant .)
    NAME            shift and go to state 50

    constant                       shift and go to state 49
    constants_lst                  shift and go to state 66

state 50

    (61) constant -> NAME .

    NAME            reduce using rule 61 (constant -> NAME .)
    HYPHEN          reduce using rule 61 (constant -> NAME .)
    RPAREN          reduce using rule 61 (constant -> NAME .)


state 51

    (7) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (48) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (49) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 67
    NAME            shift and go to state 68


state 52

    (8) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 69


state 53

    (43) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (44) ground_predicates_lst -> ground_predicate .
    (43) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (44) ground_predicates_lst -> . ground_predicate
    (48) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (49) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 44 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 71

    ground_predicate               shift and go to state 53
    ground_predicates_lst          shift and go to state 70

state 54

    (9) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    GOAL_KEY        shift and go to state 72


state 55

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def . RPAREN

    RPAREN          shift and go to state 73


state 56

    (19) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 19 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 57

    (58) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 58 (names_lst -> NAME names_lst .)


state 58

    (23) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (24) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 74


state 59

    (20) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 75


state 60

    (21) predicate_def_lst -> predicate_def . predicate_def_lst
    (22) predicate_def_lst -> predicate_def .
    (21) predicate_def_lst -> . predicate_def predicate_def_lst
    (22) predicate_def_lst -> . predicate_def
    (23) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (24) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 22 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 58

    predicate_def                  shift and go to state 60
    predicate_def_lst              shift and go to state 76

state 61

    (27) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN

    NAME            shift and go to state 77


state 62

    (10) domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .

    $end            reduce using rule 10 (domain -> LPAREN DEFINE_KEY domain_def require_def types_def predicates_def action_def_lst RPAREN .)


state 63

    (25) action_def_lst -> action_def action_def_lst .

    RPAREN          reduce using rule 25 (action_def_lst -> action_def action_def_lst .)


state 64

    (6) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 6 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 65

    (50) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (51) typed_constants_lst -> constants_lst HYPHEN . type
    (60) type -> . NAME

    NAME            shift and go to state 79

    type                           shift and go to state 78

state 66

    (54) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 54 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 54 (constants_lst -> constant constants_lst .)


state 67

    (7) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (43) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (44) ground_predicates_lst -> . ground_predicate
    (48) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (49) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 71

    ground_predicates_lst          shift and go to state 80
    ground_predicate               shift and go to state 53

state 68

    (48) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (49) ground_predicate -> LPAREN NAME . RPAREN
    (54) constants_lst -> . constant constants_lst
    (55) constants_lst -> . constant
    (61) constant -> . NAME

    RPAREN          shift and go to state 82
    NAME            shift and go to state 50

    constants_lst                  shift and go to state 81
    constant                       shift and go to state 49

state 69

    (8) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    RPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)
    LPAREN          reduce using rule 8 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 70

    (43) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 43 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 71

    (48) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (49) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 68


state 72

    (9) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 83


state 73

    (3) problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .

    $end            reduce using rule 3 (problem -> LPAREN DEFINE_KEY problem_def domain_def objects_def init_def goal_def RPAREN .)


state 74

    (23) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (24) predicate_def -> LPAREN NAME . RPAREN
    (52) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (53) typed_variables_lst -> . variables_lst HYPHEN type
    (56) variables_lst -> . VARIABLE variables_lst
    (57) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 85
    VARIABLE        shift and go to state 87

    typed_variables_lst            shift and go to state 84
    variables_lst                  shift and go to state 86

state 75

    (20) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 20 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 76

    (21) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 21 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 77

    (27) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (28) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (29) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 89

    parameters_def                 shift and go to state 88

state 78

    (50) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (51) typed_constants_lst -> constants_lst HYPHEN type .
    (50) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (51) typed_constants_lst -> . constants_lst HYPHEN type
    (54) constants_lst -> . constant constants_lst
    (55) constants_lst -> . constant
    (61) constant -> . NAME

    RPAREN          reduce using rule 51 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 50

    constants_lst                  shift and go to state 48
    typed_constants_lst            shift and go to state 90
    constant                       shift and go to state 49

state 79

    (60) type -> NAME .

    NAME            reduce using rule 60 (type -> NAME .)
    RPAREN          reduce using rule 60 (type -> NAME .)
    VARIABLE        reduce using rule 60 (type -> NAME .)


state 80

    (7) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 91


state 81

    (48) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 92


state 82

    (49) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 49 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 49 (ground_predicate -> LPAREN NAME RPAREN .)


state 83

    (9) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 93


state 84

    (23) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 94


state 85

    (24) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 24 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 24 (predicate_def -> LPAREN NAME RPAREN .)


state 86

    (52) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (53) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 95


state 87

    (56) variables_lst -> VARIABLE . variables_lst
    (57) variables_lst -> VARIABLE .
    (56) variables_lst -> . VARIABLE variables_lst
    (57) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 57 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 57 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 96

state 88

    (27) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (30) action_def_body -> . precond_def effects_def
    (31) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (32) precond_def -> . PRECONDITION_KEY literal

    PRECONDITION_KEY shift and go to state 99

    action_def_body                shift and go to state 97
    precond_def                    shift and go to state 98

state 89

    (28) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (29) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 90

    (50) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 50 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 91

    (7) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 101


state 92

    (48) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 48 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 48 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 93

    (9) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (43) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (44) ground_predicates_lst -> . ground_predicate
    (48) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (49) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 71

    ground_predicates_lst          shift and go to state 102
    ground_predicate               shift and go to state 53

state 94

    (23) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 23 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 23 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 95

    (52) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (53) typed_variables_lst -> variables_lst HYPHEN . type
    (60) type -> . NAME

    NAME            shift and go to state 79

    type                           shift and go to state 103

state 96

    (56) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 56 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 56 (variables_lst -> VARIABLE variables_lst .)


state 97

    (27) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 104


state 98

    (30) action_def_body -> precond_def . effects_def
    (33) effects_def -> . EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN
    (34) effects_def -> . EFFECT_KEY effect

    EFFECT_KEY      shift and go to state 106

    effects_def                    shift and go to state 105

state 99

    (31) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY literals_lst RPAREN
    (32) precond_def -> PRECONDITION_KEY . literal
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 107

    literal                        shift and go to state 108
    predicate                      shift and go to state 109

state 100

    (28) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (29) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (52) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (53) typed_variables_lst -> . variables_lst HYPHEN type
    (56) variables_lst -> . VARIABLE variables_lst
    (57) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 111
    VARIABLE        shift and go to state 87

    typed_variables_lst            shift and go to state 110
    variables_lst                  shift and go to state 86

state 101

    (7) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 7 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)
    LPAREN          reduce using rule 7 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 102

    (9) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 112


state 103

    (52) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (53) typed_variables_lst -> variables_lst HYPHEN type .
    (52) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (53) typed_variables_lst -> . variables_lst HYPHEN type
    (56) variables_lst -> . VARIABLE variables_lst
    (57) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 53 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 86
    typed_variables_lst            shift and go to state 113

state 104

    (27) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 27 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 27 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 105

    (30) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 30 (action_def_body -> precond_def effects_def .)


state 106

    (33) effects_def -> EFFECT_KEY . LPAREN AND_KEY effects_lst RPAREN
    (34) effects_def -> EFFECT_KEY . effect
    (37) effect -> . literal
    (38) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 114

    effect                         shift and go to state 115
    literal                        shift and go to state 116
    predicate                      shift and go to state 109

state 107

    (31) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY literals_lst RPAREN
    (41) literal -> LPAREN . NOT_KEY predicate RPAREN
    (45) predicate -> LPAREN . NAME variables_lst RPAREN
    (46) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 117
    NOT_KEY         shift and go to state 118
    NAME            shift and go to state 119
    EQUALS          shift and go to state 120


state 108

    (32) precond_def -> PRECONDITION_KEY literal .

    EFFECT_KEY      reduce using rule 32 (precond_def -> PRECONDITION_KEY literal .)


state 109

    (42) literal -> predicate .

    EFFECT_KEY      reduce using rule 42 (literal -> predicate .)
    RPAREN          reduce using rule 42 (literal -> predicate .)
    LPAREN          reduce using rule 42 (literal -> predicate .)


state 110

    (28) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 121


state 111

    (29) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 29 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 112

    (9) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 122


state 113

    (52) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 52 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 114

    (33) effects_def -> EFFECT_KEY LPAREN . AND_KEY effects_lst RPAREN
    (38) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (41) literal -> LPAREN . NOT_KEY predicate RPAREN
    (45) predicate -> LPAREN . NAME variables_lst RPAREN
    (46) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 123
    PROBABILISTIC_KEY shift and go to state 124
    NOT_KEY         shift and go to state 118
    NAME            shift and go to state 119
    EQUALS          shift and go to state 120


state 115

    (34) effects_def -> EFFECT_KEY effect .

    RPAREN          reduce using rule 34 (effects_def -> EFFECT_KEY effect .)


state 116

    (37) effect -> literal .

    RPAREN          reduce using rule 37 (effect -> literal .)
    LPAREN          reduce using rule 37 (effect -> literal .)


state 117

    (31) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . literals_lst RPAREN
    (39) literals_lst -> . literal literals_lst
    (40) literals_lst -> . literal
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 125

    literals_lst                   shift and go to state 126
    literal                        shift and go to state 127
    predicate                      shift and go to state 109

state 118

    (41) literal -> LPAREN NOT_KEY . predicate RPAREN
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 128

    predicate                      shift and go to state 129

state 119

    (45) predicate -> LPAREN NAME . variables_lst RPAREN
    (47) predicate -> LPAREN NAME . RPAREN
    (56) variables_lst -> . VARIABLE variables_lst
    (57) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 131
    VARIABLE        shift and go to state 87

    variables_lst                  shift and go to state 130

state 120

    (46) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 132


state 121

    (28) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 28 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 122

    (9) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 9 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 123

    (33) effects_def -> EFFECT_KEY LPAREN AND_KEY . effects_lst RPAREN
    (35) effects_lst -> . effect effects_lst
    (36) effects_lst -> . effect
    (37) effect -> . literal
    (38) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 133

    effects_lst                    shift and go to state 134
    effect                         shift and go to state 135
    literal                        shift and go to state 116
    predicate                      shift and go to state 109

state 124

    (38) effect -> LPAREN PROBABILISTIC_KEY . PROBABILITY literal RPAREN

    PROBABILITY     shift and go to state 136


state 125

    (41) literal -> LPAREN . NOT_KEY predicate RPAREN
    (45) predicate -> LPAREN . NAME variables_lst RPAREN
    (46) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 118
    NAME            shift and go to state 119
    EQUALS          shift and go to state 120


state 126

    (31) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 137


state 127

    (39) literals_lst -> literal . literals_lst
    (40) literals_lst -> literal .
    (39) literals_lst -> . literal literals_lst
    (40) literals_lst -> . literal
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 40 (literals_lst -> literal .)
    LPAREN          shift and go to state 125

    literal                        shift and go to state 127
    literals_lst                   shift and go to state 138
    predicate                      shift and go to state 109

state 128

    (45) predicate -> LPAREN . NAME variables_lst RPAREN
    (46) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 119
    EQUALS          shift and go to state 120


state 129

    (41) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 139


state 130

    (45) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 140


state 131

    (47) predicate -> LPAREN NAME RPAREN .

    EFFECT_KEY      reduce using rule 47 (predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 47 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 47 (predicate -> LPAREN NAME RPAREN .)


state 132

    (46) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 141


state 133

    (38) effect -> LPAREN . PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (41) literal -> LPAREN . NOT_KEY predicate RPAREN
    (45) predicate -> LPAREN . NAME variables_lst RPAREN
    (46) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> LPAREN . NAME RPAREN

    PROBABILISTIC_KEY shift and go to state 124
    NOT_KEY         shift and go to state 118
    NAME            shift and go to state 119
    EQUALS          shift and go to state 120


state 134

    (33) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst . RPAREN

    RPAREN          shift and go to state 142


state 135

    (35) effects_lst -> effect . effects_lst
    (36) effects_lst -> effect .
    (35) effects_lst -> . effect effects_lst
    (36) effects_lst -> . effect
    (37) effect -> . literal
    (38) effect -> . LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 36 (effects_lst -> effect .)
    LPAREN          shift and go to state 133

    effect                         shift and go to state 135
    effects_lst                    shift and go to state 143
    literal                        shift and go to state 116
    predicate                      shift and go to state 109

state 136

    (38) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY . literal RPAREN
    (41) literal -> . LPAREN NOT_KEY predicate RPAREN
    (42) literal -> . predicate
    (45) predicate -> . LPAREN NAME variables_lst RPAREN
    (46) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (47) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 125

    literal                        shift and go to state 144
    predicate                      shift and go to state 109

state 137

    (31) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .

    EFFECT_KEY      reduce using rule 31 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 138

    (39) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 39 (literals_lst -> literal literals_lst .)


state 139

    (41) literal -> LPAREN NOT_KEY predicate RPAREN .

    EFFECT_KEY      reduce using rule 41 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 41 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 41 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 140

    (45) predicate -> LPAREN NAME variables_lst RPAREN .

    EFFECT_KEY      reduce using rule 45 (predicate -> LPAREN NAME variables_lst RPAREN .)
    RPAREN          reduce using rule 45 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 45 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 141

    (46) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 145


state 142

    (33) effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .

    RPAREN          reduce using rule 33 (effects_def -> EFFECT_KEY LPAREN AND_KEY effects_lst RPAREN .)


state 143

    (35) effects_lst -> effect effects_lst .

    RPAREN          reduce using rule 35 (effects_lst -> effect effects_lst .)


state 144

    (38) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal . RPAREN

    RPAREN          shift and go to state 146


state 145

    (46) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    EFFECT_KEY      reduce using rule 46 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    RPAREN          reduce using rule 46 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 46 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 146

    (38) effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .

    RPAREN          reduce using rule 38 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)
    LPAREN          reduce using rule 38 (effect -> LPAREN PROBABILISTIC_KEY PROBABILITY literal RPAREN .)

